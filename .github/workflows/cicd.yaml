name: CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 20
          - 22
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - run: npm ci
      - run: npm run build

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - run: npm ci
      - run: npm run check

  test_local:
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: compose.local.yaml

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Create .secret environment file
        run: mv env/secret.example env/secret

      - name: Build the Stack
        run: docker compose build

      - name: Tear down the Stack
        run: docker compose down

  test_production:
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: compose.prod.yaml

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Create .secret environment file
        run: mv env/secret.example env/secret

      - name: Build the Stack
        run: docker compose build

      - name: Tear down the Stack
        run: docker compose down

  docker_latest:
    needs: [build, check, test_local, test_production]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/production/node/Dockerfile
          context: .
          push: true
          tags: zimagi/knowledge-interface:latest

  docker_tag:
    needs: [build, check, test_local, test_production]
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/production/node/Dockerfile
          context: .
          push: true
          tags: zimagi/knowledge-interface:${{  github.ref_name }}
